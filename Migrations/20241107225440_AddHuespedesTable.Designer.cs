// <auto-generated />
using System;
using Hotel.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel.Migrations
{
    [DbContext(typeof(HotelContext))]
    [Migration("20241107225440_AddHuespedesTable")]
    partial class AddHuespedesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HabitacionComodidade", b =>
                {
                    b.Property<Guid>("HabitacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComodidadId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HabitacionId", "ComodidadId")
                        .HasName("PK__HabitacionComodidade");

                    b.HasIndex("ComodidadId");

                    b.ToTable("HabitacionComodidades", (string)null);
                });

            modelBuilder.Entity("Hotel.Models.Comodidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Imagen")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("ReservaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Comodida__3214EC07444DCBF7");

                    b.HasIndex("ReservaId");

                    b.HasIndex(new[] { "Nombre" }, "UQ__Comodida__75E3EFCF13DB151D")
                        .IsUnique();

                    b.ToTable("Comodidades");
                });

            modelBuilder.Entity("Hotel.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Departam__3214EC070B695FD0");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("Hotel.Models.Genero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Genero__3214EC07B9EAF31C");

                    b.HasIndex(new[] { "Nombre" }, "UQ__Genero__75E3EFCF4D1426A7")
                        .IsUnique();

                    b.ToTable("Genero", (string)null);
                });

            modelBuilder.Entity("Hotel.Models.Habitacione", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Imagen")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NumeroHabitacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("PrecioPorNoche")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Habitaci__3214EC07A706F2DA");

                    b.HasIndex(new[] { "NumeroHabitacion" }, "UQ__Habitaci__08B8232FF46DA6B5")
                        .IsUnique();

                    b.ToTable("Habitaciones");
                });

            modelBuilder.Entity("Hotel.Models.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Municipi__3214EC071F4EF517");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("Hotel.Models.Pago", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("FechaPago")
                        .HasColumnType("date");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("ReservaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Pagos__3214EC070D022E1C");

                    b.HasIndex("ReservaId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Hotel.Models.Permiso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Permisos__3214EC07F2DF7F7C");

                    b.HasIndex(new[] { "Nombre" }, "UQ__Permisos__75E3EFCF02A16545")
                        .IsUnique();

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("Hotel.Models.Reserva", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("HabitacionId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("NumeroAcompanantes")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid?>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Reservas__3214EC075ADF7209");

                    b.HasIndex("HabitacionId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Hotel.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3214EC0772389402");

                    b.HasIndex(new[] { "Nombre" }, "UQ__Roles__75E3EFCFD93DC719")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Hotel.Models.ServiciosAdicionale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Imagen")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Servicio__3214EC07323488B9");

                    b.HasIndex(new[] { "Nombre" }, "UQ__Servicio__75E3EFCF73369AB9")
                        .IsUnique();

                    b.ToTable("ServiciosAdicionales");
                });

            modelBuilder.Entity("Hotel.Models.TipoDocumento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__TipoDocumento__3214EC073188D733");

                    b.HasIndex(new[] { "Nombre" }, "UQ__TipoDocumento__75E3EFCF13DB151D")
                        .IsUnique();

                    b.ToTable("TiposDocumento");
                });

            modelBuilder.Entity("Hotel.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly?>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid?>("GeneroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagenPerfil")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("NumeroDocumento")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("RolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("TipoDocumentoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Usuarios__3214EC073188D733");

                    b.HasIndex("GeneroId");

                    b.HasIndex("RolId");

                    b.HasIndex("TipoDocumentoId");

                    b.HasIndex(new[] { "CorreoElectronico" }, "UQ__Usuarios__531402F3E6A41C06")
                        .IsUnique();

                    b.HasIndex(new[] { "NombreUsuario" }, "UQ__Usuarios__6B0F5AE03D0126D5")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Huesped", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("DocumentoIdentidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ReservaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Huesped__3214EC07A706F2DA");

                    b.HasIndex("ReservaId");

                    b.ToTable("Huespedes");
                });

            modelBuilder.Entity("ReservaServicio", b =>
                {
                    b.Property<Guid>("ReservaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServicioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ReservaId", "ServicioId")
                        .HasName("PK__ReservaS__FEC3D9AFBCDC9544");

                    b.HasIndex("ServicioId");

                    b.ToTable("ReservaServicios", (string)null);
                });

            modelBuilder.Entity("RolePermiso", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermisoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "PermisoId");

                    b.HasIndex("PermisoId");

                    b.ToTable("RolePermiso", (string)null);
                });

            modelBuilder.Entity("HabitacionComodidade", b =>
                {
                    b.HasOne("Hotel.Models.Comodidade", null)
                        .WithMany()
                        .HasForeignKey("ComodidadId")
                        .IsRequired()
                        .HasConstraintName("FK__HabitacionComodidade__ComodidadId");

                    b.HasOne("Hotel.Models.Habitacione", null)
                        .WithMany()
                        .HasForeignKey("HabitacionId")
                        .IsRequired()
                        .HasConstraintName("FK__HabitacionComodidade__HabitacionId");
                });

            modelBuilder.Entity("Hotel.Models.Comodidade", b =>
                {
                    b.HasOne("Hotel.Models.Reserva", null)
                        .WithMany("Comodidads")
                        .HasForeignKey("ReservaId");
                });

            modelBuilder.Entity("Hotel.Models.Municipio", b =>
                {
                    b.HasOne("Hotel.Models.Departamento", "Departamento")
                        .WithMany("Municipios")
                        .HasForeignKey("DepartamentoId")
                        .HasConstraintName("FK__Municipio__Depar__693CA210");

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("Hotel.Models.Pago", b =>
                {
                    b.HasOne("Hotel.Models.Reserva", "Reserva")
                        .WithMany("Pagos")
                        .HasForeignKey("ReservaId")
                        .HasConstraintName("FK__Pagos__ReservaId__778AC167");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("Hotel.Models.Reserva", b =>
                {
                    b.HasOne("Hotel.Models.Habitacione", "Habitacion")
                        .WithMany("Reservas")
                        .HasForeignKey("HabitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Reservas__Habita__6EF57B66");

                    b.HasOne("Hotel.Models.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Reservas__Usuari__6E01572D");

                    b.Navigation("Habitacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Hotel.Models.Usuario", b =>
                {
                    b.HasOne("Hotel.Models.Genero", "Genero")
                        .WithMany("Usuarios")
                        .HasForeignKey("GeneroId")
                        .HasConstraintName("FK__Usuarios__Genero__5629CD9C");

                    b.HasOne("Hotel.Models.Role", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .HasConstraintName("FK__Usuarios__RolId__571DF1D5");

                    b.HasOne("Hotel.Models.TipoDocumento", "TipoDocumento")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoDocumentoId")
                        .HasConstraintName("FK__Usuarios__TipoDocumento__5812160E");

                    b.Navigation("Genero");

                    b.Navigation("Rol");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("Huesped", b =>
                {
                    b.HasOne("Hotel.Models.Reserva", "Reserva")
                        .WithMany("Huespedes")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Huespedes__ReservaId__7C4F7684");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("ReservaServicio", b =>
                {
                    b.HasOne("Hotel.Models.Reserva", null)
                        .WithMany()
                        .HasForeignKey("ReservaId")
                        .IsRequired()
                        .HasConstraintName("FK__ReservaSe__Reser__7A672E12");

                    b.HasOne("Hotel.Models.ServiciosAdicionale", null)
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .IsRequired()
                        .HasConstraintName("FK__ReservaSe__Servi__7B5B524B");
                });

            modelBuilder.Entity("RolePermiso", b =>
                {
                    b.HasOne("Hotel.Models.Permiso", null)
                        .WithMany()
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel.Models.Departamento", b =>
                {
                    b.Navigation("Municipios");
                });

            modelBuilder.Entity("Hotel.Models.Genero", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Hotel.Models.Habitacione", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Hotel.Models.Reserva", b =>
                {
                    b.Navigation("Comodidads");

                    b.Navigation("Huespedes");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Hotel.Models.Role", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Hotel.Models.TipoDocumento", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Hotel.Models.Usuario", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
