@model Hotel.Helpers.PaginatedList<Hotel.Models.ServiciosAdicionale>

@{
    ViewData["Title"] = "Gestión de Servicios";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="~/css/Servicios/modalDetailsServicios.css">
<link rel="stylesheet" href="~/css/Servicios/modalEditServicios.css">
<link rel="stylesheet" href="~/css/Servicios/modalsGlobalServicios.css">
<link rel="stylesheet" href="~/css/Servicios/indexServicios.css">

<div class="containerindexServicio mt-4">
    <div class="header">
        <h1>Gestión de Servicios</h1>
        <div class="containerActions">
            <a href="@Url.Action("Create", "ServiciosAdicionales")" class="button"><i class="fas fa-plus"></i>Nuevo
                Servicio</a>
            <div class="search-container">
                
                <input checked="" class="checkbox" type="checkbox">
                <div class="mainbox">
                    <div class="iconContainer">
                        <svg viewBox="0 0 512 512" height="1em" xmlns="http://www.w3.org/2000/svg" class="search_icon">
                            <path
                                d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z">
                            </path>
                        </svg>
                    </div>
                    <input class="search_input" placeholder="Buscar reservas..." type="text" id="searchInput"
                            name="searchString" value="@ViewData["CurrentFilter"]">
                        <button type="submit" class="search_input">B</button>
                </div>
            </div>
        </div>
    </div>

    @if (Model.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Descripción</th>
                        <th>Precio</th>
                        <th>Estado</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Nombre</td>
                            <td>@item.Descripcion</td>
                            <td>@item.Precio</td>
                            <td>
                                <span class="badge @(item.Activo == true ? "bg-success" : "bg-danger")">
                                    @(item.Activo == true ? "Activo" : "Inactivo")
                                </span>
                            </td>
                            <td>
                                <button type="button" class="btn btn-primary" onclick="loadDetailsModal('@item.Id')">
                                    <i class="iconify icon-search" data-icon="line-md:search-filled" data-width="24"
                                        data-height="24"></i>
                                </button>
                                <button type="button" class="btn btn-danger" onclick="handleDelete('@item.Id')">
                                    <i class="iconify" data-icon="mdi:delete" data-width="24" data-height="24"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Controles de Paginación -->
        <div class="pagination-container d-flex justify-content-center">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link"
                            href="@Url.Action("Index", new { page = Model.PageIndex - 1, searchString = ViewData["CurrentFilter"] })"
                            aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a class="page-link"
                                href="@Url.Action("Index", new { page = i, searchString = ViewData["CurrentFilter"] })">@i</a>
                        </li>
                    }
                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link"
                            href="@Url.Action("Index", new { page = Model.PageIndex + 1, searchString = ViewData["CurrentFilter"] })"
                            aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    }
    else
    {
        <p>No hay servicios disponibles.</p>
    }
</div>

<!-- Modal para detalles -->
<div id="detailsModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeDetailsModal()">&times;</span>
        <div class="modal-body">
            <div id="detailsContainer"></div>
        </div>
    </div>
</div>

<!-- Modal de Edición -->
<div id="editModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeEditModal()">&times;</span>
        <div class="modal-body">
            <div id="editFormContainer"></div>
        </div>
    </div>
</div>

<!-- Modal de Eliminación -->
<div id="deleteModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeDeleteModal()">&times;</span>
        <div class="modal-body">
            <div id="deleteFormContainer"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/scriptServicios/indexServicios.js"></script>
    <script>
        function validateFileSize(input) {
            const file = input.files[0];
            if (file) {
                const maxSize = 5 * 1024 * 1024; // 5MB
                if (file.size > maxSize) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'El tamaño del archivo no debe exceder los 5MB.',
                    });
                    input.value = "";
                }
            }
        }
    </script>


}