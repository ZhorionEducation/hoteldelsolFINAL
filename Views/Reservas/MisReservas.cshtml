@model Hotel.Helpers.PaginatedList<Hotel.Models.Reserva>

@{
    ViewData["Title"] = "Mis Reservas";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<link rel="stylesheet" href="~/css/Reservas/modalDetailsReservas.css">
<link rel="stylesheet" href="~/css/Reservas/modalEditReservas.css">
<link rel="stylesheet" href="~/css/Reservas/modalPaymentReserva.css">
<link rel="stylesheet" href="~/css/Reservas/modalsGlobalReservas.css">
<link rel="stylesheet" href="~/css/Reservas/indexReserva.css">
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/Flick/jquery-ui.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">

<div class="containerindexReserva">
    <div class="header">
        <h1>Mis Reservas</h1>
        <div class="containerActions">
            <a href="@Url.Action("Create", "Reservas")" class="button">
                <i class="fas fa-plus"></i>Crear Nueva Reserva
            </a>
            <form id="exportForm" method="post" asp-action="ExportReservations" class="export-buttons">
                <input type="hidden" name="reservationId" id="reservationId" />
                <button type="button" class="export-btn pdf-btn" onclick="exportReservation('pdf')">
                    <i class="fas fa-file-pdf"></i>
                    <span>PDF</span>
                </button>
                <button type="button" class="export-btn excel-btn" onclick="exportReservation('excel')">
                    <i class="fas fa-file-excel"></i>
                    <span>Excel</span>
                </button>
            </form>
            <form method="get" asp-action="MisReservas" class="search-container">
                <input checked="" class="checkbox" type="checkbox">
                <div class="mainbox">
                    <div class="iconContainer">
                        <svg viewBox="0 0 512 512" height="1em" xmlns="http://www.w3.org/2000/svg" class="search_icon">
                            <path
                                d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z">
                            </path>
                        </svg>
                    </div>
                    <input class="search_input" placeholder="Buscar reservas..." type="text" id="searchInput"
                        name="searchString" value="@ViewData["CurrentFilter"]">
                    <button type="submit" class="search_input">B</button>
                </div>
            </form>
            
        </div>
    </div>

    @if (Model.Any())
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Selección </th>
                    <th>Habitación</th>
                    <th>Fecha de Inicio - Fecha de Fin</th>
                    <th>Estado</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    var isCancelled = item.Pagos.Any(p => p.Estado == "Cancelado" || p.Estado == "Finalizado");
                    var isEnEjecucion = item.Pagos.Any(p => p.Estado == "En Ejecucion");
                    var reservaClass = isCancelled ? "cancelled-reserva" : "";

                    <tr class="@reservaClass">
                        <td>
                            <div class="custom-radio">
                                <input type="radio" id="radio-@item.Id" name="selectedReservation" value="@item.Id" class="radio-input" />
                                <label for="radio-@item.Id" class="radio-label animate__animated"></label>
                            </div>
                        </td>
                        <td>@item.Habitacion?.NumeroHabitacion</td>
                        <td>@item.FechaInicio.ToShortDateString() - @item.FechaFin.ToShortDateString()</td>
                        <td>
                            @if (item.Pagos != null && item.Pagos.Any())
                            {
                                @item.Pagos.First().Estado
                            }
                            else
                            {
                                <span>Reservado</span>
                            }
                        </td>
                        <td>
                            <button onclick="loadDetailsModal('@item.Id')" class="btn btn-info">
                                <span class="iconify icon-search" data-icon="line-md:search-filled" data-inline="false"
                                    data-rotate="auto"></span>
                            </button>
                            @if (item.Pagos != null && item.Pagos.Any())
                            {
                                var estado = item.Pagos.First().Estado;
                                if (estado != "En Ejecucion" && estado != "Por confirmar" && estado != "Confirmado" && estado != "Finalizado" )
                                {
                                    <button class="btn @(estado == "Cancelado" ? "btn-cancelado" : "btn-pay")"
                                        onclick="openPaymentDetailsModal('@(item.Pagos.First().Id)')">
                                        <span class="iconify icon-search" data-icon="mdi:currency-usd" data-inline="false"></span>
                                    </button>

                                }
                            }
                            else
                            {
                                <a href="@Url.Action("Pagar", "Reservas", new { id = item.Id })" class="btn btn-danger">
                                    <span class="iconify icon-search" data-icon="mdi:currency-usd" data-inline="false"></span>
                                </a>
                                <button class="btn btn-cancelar" onclick="cancelReservation('@item.Id')">
                                    <span class="iconify icon-search" data-icon="mdi:cancel" data-inline="false"></span>
                                </button>
                            }
                        </td>

                    </tr>
                }
            </tbody>
        </table>

        <!-- Controles de Paginación -->
        <div class="pagination-container">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link"
                            href="@Url.Action("MisReservas", new { page = Model.PageIndex - 1, searchString = ViewData["CurrentFilter"] })"
                            aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a class="page-link"
                                href="@Url.Action("MisReservas", new { page = i, searchString = ViewData["CurrentFilter"] })">@i</a>
                        </li>
                    }
                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link"
                            href="@Url.Action("MisReservas", new { page = Model.PageIndex + 1, searchString = ViewData["CurrentFilter"] })"
                            aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    }
    else
    {
        <p>No tienes reservas.</p>
    }

    <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeEditModal()">&times;</span>
            <div class="modal-body">
                <div id="editFormContainer"></div>
            </div>
        </div>
    </div>

    <!-- Modal para detalles -->
    <div id="detailsModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeDetailsModal()">&times;</span>
            <div class="modal-body">
                <div id="detailsContainer"></div>
            </div>
        </div>
    </div>

    <!-- Modal para pagos -->
    <div id="paymentDetailsModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="$('#paymentDetailsModal').hide()">&times;</span>
            <div class="modal-body">
                <div id="paymentDetailsForm"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closePaymentModal()">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="savePaymentDetails()">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function exportReservation(format) {
            var selectedReservation = document.querySelector('input[name="selectedReservation"]:checked');
            if (selectedReservation) {
                document.getElementById('reservationId').value = selectedReservation.value;
                document.getElementById('exportForm').action = '/Reservas/ExportReservations?format=' + format;
                document.getElementById('exportForm').submit();
            } else {
                alert('Por favor, seleccione una reserva.');
            }
        }

        function cancelReservation(id) {
            Swal.fire({
                title: '¿Estás seguro?',
                text: "Esta acción no se puede deshacer",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, cancelar reserva',
                cancelButtonText: 'No, mantener reserva'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/Reservas/CancelarReserva/${id}`,
                        type: 'POST',
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire(
                                    '¡Cancelada!',
                                    'La reserva ha sido cancelada.',
                                    'success'
                                ).then(() => {
                                    window.location.reload();
                                });
                                
                            } else {
                                Swal.fire(
                                    'Error',
                                    response.message || 'No se pudo cancelar la reserva.',
                                    'error'
                                );
                            }
                        },
                        error: function () {
                            Swal.fire(
                                'Error',
                                'Hubo un problema al cancelar la reserva.',
                                'error'
                            );
                        }
                    });
                }
            });
        }
    </script>

    <script src="~/js/scriptReservas/indexReserva.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script src="~/js/scriptReservas/editReserva.js"></script>



    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}