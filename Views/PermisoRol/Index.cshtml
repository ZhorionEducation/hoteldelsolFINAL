@model Hotel.Models.PermisoRolIndexViewModel

@{
    ViewData["Title"] = "Gestión de Permisos y Roles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
<link rel="stylesheet" href="~/css/PermisoRol.css">

<div class="container fade-in">
    <div class="row">
        <div class="col-md-6">
            <div class="content-box">
                <h2><i class="bi bi-shield-lock"></i> Permisos</h2>
                <div class="header-container">
                    <button type="button" class="btn btn-primary" onclick="openModal('addPermisoModal')">
                        <i class="bi bi-plus-circle"></i> Agregar Permiso
                    </button>
                    <div class="search-container">
                        <input type="text" class="search-input" id="searchPermiso" placeholder="Buscar permiso..."
                            onkeyup="filterTable('permission')">
                        <i class="bi bi-search search-icon"></i>
                    </div>
                </div>
                <!-- Permission Table -->
                <div class="table-container">
                    <table id="permissionTable">
                        <thead>
                            <tr>
                                <th>Nombre</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int itemsPerPage = 5;
                                int totalPages = (int)Math.Ceiling((double)Model.Permisos.Count() / itemsPerPage);

                                for (int i = 0; i < Model.Permisos.Count(); i++)
                                {
                                    var permiso = Model.Permisos.ElementAt(i);
                                    <tr class="permission-row" data-page="@((i / itemsPerPage) + 1)" style="display: none;">
                                        <td>@permiso.Nombre</td>
                                        <td>
                                            <button type="button" class="btn btn-primary"
                                                onclick="openModal('editPermisoModal', '@permiso.Id')">
                                                <i class="iconify icon-edit" data-icon="line-md:edit-twotone" data-width="24"
                                                    data-height="24"></i>
                                            </button>
                                            <button onclick="deletePermiso('@permiso.Id')" class="btn btn-danger">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                            <button type="button" class="btn btn-info"
                                                onclick="openModal('detailsPermisoModal', '@permiso.Id')">
                                                <i class="iconify icon-search" data-icon="line-md:search-filled" data-width="24"
                                                    data-height="24"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <div class="pagination-controls mt-3">
                        <button class="btn btn-secondary" onclick="changePage('permission', 'prev')"
                            id="permissionPrevBtn">
                            <i class="bi bi-chevron-left"></i> Anterior
                        </button>
                        <div class="page-numbers" id="permissionPageNumbers"></div>
                        <span id="permissionCurrentPage" class="pagination-info">Página 1 de @totalPages</span>
                        <button class="btn btn-secondary" onclick="changePage('permission', 'next')"
                            id="permissionNextBtn">
                            Siguiente <i class="bi bi-chevron-right"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="content-box">
                <h2><i class="bi bi-people"></i> Roles</h2>
                <div class="header-container">
                    <button type="button" class="btn btn-primary" onclick="openModal('addRolModal')">
                        <i class="bi bi-plus-circle"></i> Agregar Rol
                    </button>
                    <div class="search-container">
                        <input type="text" class="search-input" id="searchRol" placeholder="Buscar rol..."
                            onkeyup="filterTable('roles')">
                        <i class="bi bi-search search-icon"></i>
                    </div>
                </div>
                <!-- Roles Table -->
                <div class="table-container">
                    <table id="rolesTable">
                        <thead>
                            <tr>
                                <th>Nombre</th>
                                <th>Estado</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int rolesTotalPages = (int)Math.Ceiling((double)Model.Roles.Count() / itemsPerPage);

                                for (int i = 0; i < Model.Roles.Count(); i++)
                                {
                                    var rol = Model.Roles.ElementAt(i);
                                    <tr class="role-row" data-page="@((i / itemsPerPage) + 1)" style="display: none;">
                                        <td>@rol.Nombre</td>
                                        <td class="text-center">
                                            <label class="switch">
                                                <input type="checkbox" @(rol.Estado ? "checked" : "")
                                                    onclick="changeEstadoRol('@rol.Id', @rol.Estado.ToString().ToLower())">
                                                <div class="slider">
                                                    <div class="circle">
                                                        <svg class="cross" xml:space="preserve"
                                                            style="enable-background:new 0 0 512 512"
                                                            viewBox="0 0 365.696 365.696" y="0" x="0" height="6" width="6"
                                                            xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1"
                                                            xmlns="http://www.w3.org/2000/svg">
                                                            <g>
                                                                <path data-original="#000000" fill="currentColor"
                                                                    d="M243.188 182.86 356.32 69.726c12.5-12.5 12.5-32.766 0-45.247L341.238 9.398c-12.504-12.503-32.77-12.503-45.25 0L182.86 122.528 69.727 9.374c-12.5-12.5-32.766-12.5-45.247 0L9.375 24.457c-12.5 12.504-12.5 32.77 0 45.25l113.152 113.152L9.398 295.99c-12.503 12.503-12.503 32.769 0 45.25L24.48 356.32c12.5 12.5 32.766 12.5 45.247 0l113.132-113.132L295.99 356.32c12.503 12.5 32.769 12.5 45.25 0l15.081-15.082c12.5-12.504 12.5-32.77 0-45.25zm0 0" />
                                                            </g>
                                                        </svg>
                                                        <svg class="checkmark" xml:space="preserve"
                                                            style="enable-background:new 0 0 512 512" viewBox="0 0 24 24" y="0"
                                                            x="0" height="10" width="10"
                                                            xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1"
                                                            xmlns="http://www.w3.org/2000/svg">
                                                            <g>
                                                                <path data-original="#000000" fill="currentColor"
                                                                    d="M9.707 19.121a.997.997 0 0 1-1.414 0l-5.646-5.647a1.5 1.5 0 0 1 0-2.121l.707-.707a1.5 1.5 0 0 1 2.121 0L9 14.171l9.525-9.525a1.5 1.5 0 0 1 2.121 0l.707.707a1.5 1.5 0 0 1 0 2.121z" />
                                                            </g>
                                                        </svg>
                                                    </div>
                                                </div>
                                            </label>
                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-primary"
                                                onclick="openModal('editRolModal', '@rol.Id')">
                                                <i class="iconify icon-edit" data-icon="line-md:edit-twotone" data-width="24"
                                                    data-height="24"></i>
                                            </button>
                                            <button onclick="deleteRol('@rol.Id')" class="btn btn-danger">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                            <button type="button" class="btn btn-info"
                                                onclick="openModal('detailsRolModal', '@rol.Id')">
                                                <i class="iconify icon-search" data-icon="line-md:search-filled" data-width="24"
                                                    data-height="24"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <div class="pagination-controls mt-3">
                        <button class="btn btn-secondary" onclick="changePage('roles', 'prev')">
                            <i class="bi bi-chevron-left"></i> Anterior
                        </button>
                        <span id="rolesCurrentPage">Página 1 de @rolesTotalPages</span>
                        <button class="btn btn-secondary" onclick="changePage('roles', 'next')">
                            Siguiente <i class="bi bi-chevron-right"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal para editar rol -->
<div id="editRolModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal('editRolModal')">&times;</span>
        <h2>Editar Rol</h2>
        <form asp-action="EditRol" method="post" class="needs-validation" novalidate>
            @Html.AntiForgeryToken()
            <input type="hidden" id="editRolId" name="Id" />
            <div class="mb-3">
                <label for="editRolNombre" class="form-label">Nombre del Rol</label>
                <input type="text" class="form-control" id="editRolNombre" name="Nombre" required
                    pattern="^[A-Za-zñÑáéíóúÁÉÍÓÚ\s]{1,25}$" maxlength="25"
                    oninput="this.value = this.value.replace(/[^A-Za-zñÑáéíóúÁÉÍÓÚ\s]/g, '')" />
                <div class="invalid-feedback">
                    Solo se permiten letras y espacios (1-25 caracteres).
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label">Permisos</label>
                <div class="permissions-container">
                    @foreach (var permiso in Model.Permisos)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="PermisosIds" value="@permiso.Id"
                                id="permiso-@permiso.Id">
                            <label class="form-check-label" for="permiso-@permiso.Id">
                                @permiso.Nombre
                            </label>
                        </div>
                    }
                </div>
                <div class="invalid-feedback">
                    Seleccione al menos un permiso.
                </div>
            </div>

            <button type="submit" class="btn btn-primary">
                <i class="iconify" data-icon="mdi:content-save" data-width="24" data-height="24"></i>
                Guardar
            </button>
        </form>
    </div>
</div>


<!-- Modal para Eliminar Permiso -->
<div id="deletePermisoModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal('deletePermisoModal')">&times;</span>
        <h2>Eliminar Permiso</h2>
        <form asp-action="DeletePermiso" method="post">
            <input type="hidden" id="deletePermisoId" name="Id" />
            <p>¿Está seguro de eliminar este permiso?</p>
            <button type="submit" class="btn btn-danger">
                <i class="iconify" data-icon="mdi:delete" data-width="24" data-height="24"></i>
            </button>
            <button type="button" class="btn btn-secondary" onclick="closeModal('deletePermisoModal')">
                <i class="iconify" data-icon="mdi:cancel" data-width="24" data-height="24"></i>
            </button>
        </form>
    </div>
</div>

<!-- Modal para Eliminar Rol -->
<div id="deleteRolModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal('deleteRolModal')">&times;</span>
        <h2>Eliminar Rol</h2>
        <form asp-action="DeleteRol" method="post">
            <input type="hidden" id="deleteRolId" name="Id" />
            <p>¿Está seguro de eliminar este rol?</p>
            <button type="submit" class="btn btn-danger">
                <i class="iconify" data-icon="mdi:delete" data-width="24" data-height="24"></i>
            </button>
            <button type="button" class="btn btn-secondary" onclick="closeModal('deleteRolModal')">
                <i class="iconify" data-icon="mdi:cancel" data-width="24" data-height="24"></i>
            </button>
        </form>
    </div>
</div>

<!-- Modal para Agregar Permiso -->
<div id="addPermisoModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal('addPermisoModal')">&times;</span>
        <h2>Agregar Permiso</h2>
        <form id="createPermisoForm" asp-action="CreatePermiso" method="post" class="needs-validation" novalidate>
            @Html.AntiForgeryToken()
            <div class="mb-3">
                <label for="permisoNombre" class="form-label">Nombre del Permiso</label>
                <input type="text" class="form-control" id="permisoNombre" name="Nombre" required
                    pattern="^[A-Za-zñÑ\s]{1,25}$" maxlength="25" />
                <div class="invalid-feedback">
                    Solo se puede letras y espacios de 1 - 25.
                </div>
            </div>
            <button type="submit" class="btn btn-success">
                <i class="iconify" data-icon="mdi:plus-circle" data-width="24" data-height="24"></i>
            </button>
        </form>
    </div>
</div>

<!-- Modal para agregar rol -->
<div id="addRolModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal('addRolModal')">&times;</span>
        <h2>Agregar Rol</h2>
        <form id="addRolForm" method="post" class="needs-validation" novalidate>
            @Html.AntiForgeryToken()
            <div class="mb-3">
                <label for="addRolNombreInput" class="form-label">Nombre del Rol</label>
                <input type="text" class="form-control" id="addRolNombreInput" name="Nombre" required
                    pattern="^[A-Za-zñÑ\s]{1,25}$" maxlength="25" />
                <div class="invalid-feedback">
                    Ingrese 1-25 letras y espacios.
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label">Permisos</label>
                <div class="permissions-container">
                    @foreach (var permiso in Model.Permisos)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="PermisosIds" value="@permiso.Id"
                                id="permiso-add-@permiso.Id">
                            <label class="form-check-label" for="permiso-add-@permiso.Id">
                                @permiso.Nombre
                            </label>
                        </div>
                    }
                </div>
                <div class="invalid-feedback">
                    Seleccione al menos un permiso.
                </div>
            </div>

            <button type="submit" class="btn btn-success">
                <i class="iconify" data-icon="mdi:plus-circle" data-width="24" data-height="24"></i>
            </button>
        </form>
    </div>
</div>

<!-- Modal para Editar Permiso -->
<div id="editPermisoModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal('editPermisoModal')">&times;</span>
        <h2>Editar Permiso</h2>
        <form asp-action="EditPermiso" method="post" class="needs-validation" novalidate>
            <input type="hidden" id="editPermisoId" name="Id" />
            <div class="mb-3">
                <label for="editPermisoNombre" class="form-label">Nombre del Permiso</label>
                <input type="text" class="form-control" id="editPermisoNombre" name="Nombre" required
                    pattern="^[A-Za-zñÑ\s]{1,25}$" maxlength="25" />
                <div class="invalid-feedback">
                    Solo se puede letras y espacios de 1 - 25.
                </div>
            </div>
            <button type="submit" class="btn btn-primary">
                <i class="iconify" data-icon="mdi:content-save" data-width="24" data-height="24"></i> Guardar Cambios
            </button>
        </form>
    </div>
</div>

<!-- Modal para Detalles de Permiso -->
<div id="detailsPermisoModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal('detailsPermisoModal')">&times;</span>
        <h2>Detalles del Permiso</h2>
        <div id="detailsPermisoContent"></div>
    </div>
</div>

<!-- Modal para Detalles de Rol -->
<div id="detailsRolModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal('detailsRolModal')">&times;</span>
        <h2>Detalles del Rol</h2>
        <div id="detailsRolContent"></div>
    </div>
</div>

<!-- Modal para Cambiar Estado del Rol -->
<div id="cambiarEstadoRolModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal('cambiarEstadoRolModal')">&times;</span>
        <h2>Cambiar Estado del Rol</h2>
        <p>¿Desea cambiar el estado de este rol?</p>
        <button id="confirmarCambioEstado" class="btn btn-primary">
            <i class="iconify" data-icon="mdi:check" data-width="24" data-height="24"></i>
        </button>
        <button class="btn btn-secondary" onclick="closeModal('cambiarEstadoRolModal')">
            <i class="iconify" data-icon="mdi:cancel" data-width="24" data-height="24"></i>
        </button>
    </div>
</div>


@section Scripts {
    <script src="~/js/scriptPermisoRol/permisoRol.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Ejemplo de JavaScript para habilitar las validaciones de Bootstrap
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
    <script>
        function openAddPermisoRolModal(rolId) {
            document.getElementById('rolId').value = rolId;
            document.getElementById('addPermisoRolModal').style.display = 'block';
        }

        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }
    </script>
    <!-- Add this JavaScript to handle pagination -->
    <script>
        let currentPages = {
            permission: 1,
            roles: 1
        };

        const itemsPerPage = 5;

        function showPage(tableType, pageNumber) {
            console.log(`Showing ${tableType} page ${pageNumber}`); // Debug log
            const selector = tableType === 'roles' ? '.role-row' : '.permission-row';
            const rows = document.querySelectorAll(selector);

            console.log(`Found ${rows.length} rows for ${tableType}`); // Debug log

            rows.forEach(row => {
                const rowPage = parseInt(row.getAttribute('data-page'));
                console.log(`Row ${row.innerText} - Page ${rowPage}`); // Debug log
                row.style.display = rowPage === pageNumber ? 'table-row' : 'none';
            });

            document.getElementById(`${tableType}CurrentPage`).textContent =
                `Página ${pageNumber} de ${Math.ceil(rows.length / itemsPerPage)}`;
        }

        function changePage(tableType, direction) {
            const selector = tableType === 'roles' ? '.role-row' : '.permission-row';
            const rows = document.querySelectorAll(selector);
            const totalPages = Math.ceil(rows.length / itemsPerPage);

            if (direction === 'prev' && currentPages[tableType] > 1) {
                currentPages[tableType]--;
            } else if (direction === 'next' && currentPages[tableType] < totalPages) {
                currentPages[tableType]++;
            }

            showPage(tableType, currentPages[tableType]);
        }

        // Initialize pagination
        document.addEventListener('DOMContentLoaded', function () {
            showPage('permission', 1);
            showPage('roles', 1);

            // Make first page visible initially
            const permissionRows = document.querySelectorAll('.permission-row[data-page="1"]');
            const roleRows = document.querySelectorAll('.role-row[data-page="1"]');

            permissionRows.forEach(row => row.style.display = 'table-row');
            roleRows.forEach(row => row.style.display = 'table-row');
        });
    </script>
}